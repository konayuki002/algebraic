+-*ができる
==ができる
<>ができる

=> ならば

<>ができる => ==ができる
  !(a<b || a>b)で構成できる

+-*は独立?
多項式は+-*==ができるが<>が出来ない
整数, 有理数, 拡大有理数は+-*<>==が出来る
  <>ができる => +-*==ができる
    継承は書ける
    流用できる部分は?
    [<> => (+-* && ==)] = [<> => +-* && <> => ==]
    <> => == はless_thanをequal_toに使える

    <> => +-* は流用出来ないので独立に定義するまたは==をNumberに組み込む
    とりあえず独立で実装
　　　　　 ==  <>  +-* ./ %/
多項式　　 o   x   o   x  o 
整数　　　 o   o   o   x  o 
有理数　　 o   o   o   o  x 
拡大有理数 o   o   o   o  x 


演算子生成テンプレート生成テンプレート?
  +(T, U)から
  +(T, U), +(T, int), +(int, T)を生成?
  できたら書きやすい

  +の部分が+-*/の全部で同時に生成してほしい

  この演算子生成テンプレートテンプレートは共通化して親クラスへ

https://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html SFINAEとテンプレートの制約? conceptなしで

アップキャスト用のintを取るコンストラクタは子クラスだけではなく演算子を定義しているクラスにも書けば暗黙的にintをとれるのでは
virtualにはできる?
  全部無理そう
  テンプレート引数がintでは解決しないから
  明示的にintの場合を定義しよう